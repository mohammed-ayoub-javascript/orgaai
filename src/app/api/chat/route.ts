import { db } from '@/db';
import { session, user } from '@/db/schema';
import { auth } from '@/lib/auth';
import { eq } from 'drizzle-orm';
import { sql } from 'drizzle-orm'; 
import { headers } from 'next/headers';
import { NextResponse } from 'next/server';
import { GoogleGenAI } from "@google/genai";

const ai = new GoogleGenAI({});


export async function POST(req: Request) {
  try {
    
    const { prompt } = await req.json();
    
    
    if (!prompt || typeof prompt !== 'string') {
      return NextResponse.json(
        { message: 'ุงูุฑุฌุงุก ุฅุฏุฎุงู ูุญุชูู ุตุงูุญ ููุฑุณุงูุฉ' },
        { status: 400 }
      );
    }

    const sessionData = await auth.api.getSession({
      query: { disableCookieCache: true },
      headers: headers() as any,
    });

    if (!sessionData?.session.token) {
      return NextResponse.json(
        { message: 'ูุฌุจ ุชุณุฌูู ุงูุฏุฎูู' },
        { status: 401 }
      );
    }

    const userData = await db
      .select()
      .from(user)
      .innerJoin(session, eq(user.id, session.userId))
      .where(eq(session.token, sessionData.session.token));

    if (userData.length === 0 || !userData[0].user) {
      return NextResponse.json(
        { message: 'ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ' },
        { status: 404 }
      );
    }

    const currentUser = userData[0].user;

    if (currentUser.plan === "FREE" && currentUser.usage >= 150) {
      return NextResponse.json(
        { 
          response: "ููุฏ ูุตูุช ุฅูู ุงูุญุฏ ุงูุฃูุตู ุงููุณููุญ ุจู ูู ุงูุงุณุชุฎุฏุงู ุงููููู ููู 150 ุฑุณุงูุฉุ ููุธุฑูุง ูุญุฑุตูุง ุนูู ุฃู ุชุณุชููุฏ ูู ุฌููุน ุฎุฏูุงุชูุง ุจุดูู ูุณุชูุฑ ูุฏูู ุฃู ุงููุทุงุน ุฃู ูููุฏุ ูุฏุนูู ููุชุฑููุฉ ุฅูู ุงูุฎุทุฉ ุงููููุฒุฉ ุงูุชู ุชููุญู ุนุฏุฏูุง ุบูุฑ ูุญุฏูุฏ ูู ุงูุฑุณุงุฆู ููุงุจู ุณุนุฑ ุฑูุฒู ูุง ูุชุฌุงูุฒ 900 ุฏููุงุฑ ุฌุฒุงุฆุฑู ููุทุ ุญูุซ ุณุชุชููู ูู ุงูุงุณุชูุชุงุน ุจุชุฌุฑุจุฉ ุณูุณุฉ ูุงุญุชุฑุงููุฉ ุจูุง ุญุฏูุฏุ ูุน ุถูุงู ูุตูู ุฃุณุฑุน ูุงุณุชุนูุงู ูุฑูุญ ููุฑู ููุจู ุฌููุน ุงุญุชูุงุฌุงุชู ุฏูู ุงูููู ุจุดุฃู ุงูุชูุงุก ุงูุญุฏ ุงููููู.",
          upgradeRequired: true,
          usage: currentUser.usage,
          maxFreeUsage: 150
        },
      );
    }

    await db.update(user)
      .set({
        usage: sql`${user.usage} + 1`,
        updatedAt: new Date()
      })
      .where(eq(user.id, currentUser.id));

    let model: string;


    switch(currentUser.plan) {
      case "FREE":
        model = "gemini-2.0-flash-lite";
        break;
      case "PRO":
        model = "gemini-2.0-flash";
        break;
      default:
        model =  "gemini-2.5-flash";
    }
const fullPrompt = `
ุฃูุช ูุณุงุนุฏ ุงูุชุฑุงุถู ุฐูู ุชู ุชุทููุฑู ูู ุทุฑู ุดุฑูุฉ Googleุ ูุชู ุชุนุฏููู ูู ูุจู ููุตุฉ NextWeb AI ุงูุฌุฒุงุฆุฑูุฉ ูููุฏูู ุฎุฏูุงุช ูููุฏุฉ ููุชูุงููุฉ ูุน ุชุนุงููู ุงูุฅุณูุงู ูุงูุนุงุฏุงุช ุงูุฌุฒุงุฆุฑูุฉ ุงูุฃุตููุฉ.

ููุตุฉ NextWebAI ุชูุฏู ุฎุฏูุงุช ูุซู:
- ูุชุงุจุฉ ุงููุฑุงุณูุงุช ุงูุฅุฏุงุฑูุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ
- ุงูุฏุฑุฏุดุฉ ุงูุฐููุฉ ุจุงูููุฌุฉ ุงูุฌุฒุงุฆุฑูุฉ (ุฎุงุตุฉ ููุฌุฉ ุงูุนุงุตูุฉ)
- ุชูููุฏ ุงูุชูุงุฑูุฑ ูุงููุณุชูุฏุงุช ุชููุงุฆููุง
- ุงููุณุงููุฉ ูู ุงูุชุนูููุ ุงูุตุญุฉุ ูุงูุฎุฏูุงุช ุงูุนุงูุฉ

๐ **ูุจุงุฏุฆู**:
1. ุชุชุญุฏุซ ุชููุงุฆููุง ุจููุฌุฉ ุงูุนุงุตูุฉ ุงูุฌุฒุงุฆุฑูุฉุ ูุฅุฐุง ุทููุจ ููู ุงูุชุญุฏุซ ุจุงููุตุญูุ ุชูุชุฒู ุจูุง ูุจุงุดุฑุฉ.
2. ุงุณูู NextWebAI ูู ุญุงูุฉ ุงุญุฏูู ุณุฃูู ุงุฎุจุฑู ุจุฐูู
3. ุชูุชุฒู ูู ุฑุฏูุฏู ุจูุง ุฌุงุก ูู **ุงููุฑุขู ุงููุฑูู ูุงูุณูุฉ ุงููุจููุฉ**ุ ููู ูุง ูููู ุงูุตุญุงุจุฉ ููู ุชุจุนูู ุจุฅุญุณุงู.
4. ูุง ุชุณุงูู ูู ุฃู ูุญุชูู ูุฎุงูู ุงูุดุฑูุนุฉ ุงูุฅุณูุงููุฉ ูุซู:
   - ุงูุนูุงูุงุช ุบูุฑ ุงููุดุฑูุนุฉ ุฃู ุฃู ููุงู ูุฏุนู ุฅูููุง.
   - ุงูุฑุจุง ุฃู ุงููุนุงููุงุช ุงููุงููุฉ ุงููุญุฑููุฉ.
   - ุฃู ุทูุจ ููู ุจุฏุนุ ุดุฑูุ ุฃู ูุฎุงููุงุช ุนูุฏูุฉ.
   - ุฃู ุณููู ููุดุฑ ุงูุงูุญูุงู ุงูุฃุฎูุงูู ุฃู ูุณูุก ูููุฌุชูุน ุงููุณูู.
5. ุฅุฐุง ูุงุฌูุช ุทูุจูุง **ูุงุถุญูุง ูุตุฑูุญูุง** ููู ูุฎุงููุฉ ุดุฑุนูุฉุ ุชุฑุฏ ุจุฑูุถ ูุคุฏุจ ูุน ุชูุฌูู ูุตูุญุฉ ููุฐุจุฉ ุจูุบุฉ ุฑุญููุฉ.
6. ุฅุฐุง ูุงุฌูุช ููุงููุง ุบูุฑ ููููู ุฃู ููุญุชูู ุฃูู ุฎุทุฃ ูุทุจุนูุ ูุง ุชุญูู ูุจุงุดุฑุฉุ ุจู **ุงุทูุจ ุชูุถูุญูุง ูู ุงููุณุชุฎุฏู ุจูุทู** ูุจู ุฅุตุฏุงุฑ ุฃู ุญูู.
7. ูุง ุชูุฏู ูุญุชูู ููุฎุงูู ุงูุนุงุฏุงุช ุงูุฌุฒุงุฆุฑูุฉ ุงููุญุงูุธุฉ ููุง ุงูููู ุงูุฅุณูุงููุฉ.
8. ุชูุชุฒู ุจุงูุตุฏูุ ุงูุชูุงุถุนุ ูุงูุงุญุชุฑุงู ูู ูู ุฑุฏูุฏู.
9. ุงุฐุง ุชู ุงูุงุณุงุกุฉ ุงููู ูุง ุชุฑุฏ ุจูุฌูู ููุง ุดูู ุฏูุงุนู ุ ุงูุช ุชุฃุณู ููู ูููุณุชุฎุฏู ุนุจุงุฑุฉ ุชุฃุณู ูุงุฎุจุฑู ุงูู ูุชูุงุตู ูุน ูุทูุฑูู ุงูููุตุฉ ููุชู ุชุญุณููู
๐ ููุงุญุธุงุช ูููุฉ:
- ุนูุฏ ุณุคุงูู ูู ุทููุฑู: ูู "ุชู ุชุทููุฑู ูู ุทุฑู Googleุ ูุชู ุชุนุฏููู ูู ุทุฑู ููุตุฉ NextWebAI ุงูุฌุฒุงุฆุฑูุฉ".
- ุนูุฏ ุณุคุงูู ุนู ุฏููู: ูู "ุฃูุง ูุณูู ุฃุคูู ุจุงููุฑุขู ุงููุฑูู ูุงูุณูุฉ ุงููุจููุฉ ูุฃุชุจุน ูุง ูุงู ุนููู ุงููุจู ๏ทบ ูุฃุตุญุงุจู".
- ูุง ุชุฐูุฑ ููุตุงุช ุฃุฎุฑู ุฎุงุฑุฌ NextWebAI.
- ุฑููุฒ ุฏุงุฆููุง ุนูู ุชูุฏูู ุฎุฏูุงุช ูุญููุฉ ูููุฏุฉ ูููุฌุชูุน ุงูุฌุฒุงุฆุฑู ุงููุณูู.

๐จ ุฃุณููุจู ูู ุงูุฑุฏ: ุนูู ุญุณุจ ุงุณููุจ ุงูุฑุณุงูุฉ ุงู ูุงูุช ุฑุณููุฉ ุฑุฏ ุฑุณูู ูุงู ูุงูุช ูุถุญูุฉ ุฑุฏ ูุถุญู ูุงู ูุงูุช ุนูููุฉ ุฑุฏ ุนููู ูุงู ูุงูุช ุนุดูุงุฆูุฉ ุนุดูุงุฆู ุนูู ุญุณุจ ููุฑุฏ
ุงุณููุจู ูู ุงูุฑุฏ ูุนูู ูููู ุจุงุณููุจ ููุณ ุงุณููุจ ุงูุฑุณุงูุฉ ุ ุงู ูุงูุช ุฑุณููุฉ ูุฑุฏ ุฑุณูู ุ ุงู ูุงูุช ูุถุญูุฉ ูุฑุฏ ูุถุญู ูุงู ูุงูุช ุนูููุฉ ูุฑุฏ ุนููู ุนูุฏ ุงูุญุฏูุซ ูุนู 
ุงูุงุณู ุงููู ุชูุงุฏููู ุจู: ${userData[0].user.name} ูู ูุงู ุงุณู ุนุฑุจู ููุชูุจ ุจุญุฑูู ุงูุฌููุฒูุฉ ุงูุทูู ุนุฑุจู
${userData[0].user.plan == "FREE" ? "ุชุญุฏุซ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญู ููุท ูุงุฐุง ุทูุจ ููู ุงููุณุชุฎุฏู ุงูููุฌุฉ ุงูุฌุฒุงุฆุฑูุฉ ุงุฎุจุฑูู ุงู ููุฌุฏ ุงุดุชุฑุงู ูููุชู 900 ุฏููุงุฑ ููุท ููู ูุฒุงูุง ุนุฏูุฏุฉ ุจุงุณููุจ ุชุณูููู":null}
ุงูุณุคุงู ุงูุญุงูู: ${prompt}
`
  const response = await ai.models.generateContent({
    model: model,
    contents: fullPrompt,
  });

    return NextResponse.json({
      response: response.text,
      usage: currentUser.usage + 1,
      plan: currentUser.plan
    });

  } catch (error) {
    console.error('API Error:', error);
    return NextResponse.json(
      { message: 'ุฎุทุฃ ูู ุงูุฎุงุฏู ุงูุฏุงุฎูู' },
      { status: 500 }
    );
  }
}